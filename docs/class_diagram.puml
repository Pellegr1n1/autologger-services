@startuml AutoLogger_Class_Diagram

skinparam {
    classFontSize 14
    classBackgroundColor #F5F7FA
    classBorderColor #0D47A1
    arrowColor #4FC3F7
    monochrome false
}

class User {
  -id: string
  -email: string
  -password: string
  -name: string
  +register(): void
  +authenticate(): string
}

class Vehicle {
  -id: string
  -userId: string
  -vin: string
  -brand: string
  -model: string
  -manufactureDate: Date
  -engine: string
  -enginePower: number
  -fuelType: string
  -fuelConsumption: number
  -transmission: string
  -licensePlate: string
  -registrationExpiryDate: Date
  -initialMileage: number
  -currentMileage: number
  -photos: string[]
  +create(): void
  +updateMileage(mileage: number): void
  +addPhoto(url: string): void
  +fetchVehicleData(model: string): void
}

class Service {
  -id: string
  -vehicleId: string
  -mechanicName: string
  -tags: string[]
  -type: string
  -date: Date
  -cost: number
  -mileage: number
  -description: string
  -invoicePhoto: string
  +create(): void
  +reviewData(): boolean
  +confirmWithCaptcha(token: string): boolean
  +addInvoicePhoto(url: string): void
}

class BlockchainRecord {
  -id: string
  -serviceId: string
  -transactionHash: string
  -blockNumber: number
  +registerOnBlockchain(): string
  +verifyOnBlockchain(): boolean
}

class Dashboard {
  -vehicleId: string
  -monthlyAverageMileage: number
  -lastService: Service
  -currentOdometer: number
  -totalDistance: number
  -yearlyDistance: number
  -totalSpent: number
  -expenseCategories: Map<string, number>
  +calculateMonthlyAverageMileage(): number
  +generateCategoryChart(): ChartData
  +generateMonthlyCostChart(): ChartData
  +getLastService(): Service
  +getCurrentOdometer(): number
  +getTotalDistance(): number
  +getYearlyDistance(year: number): number
  +getTotalSpent(): number
}

class Media {
  -id: string
  -url: string
  -type: string
  -associatedId: string
  +upload(url: string): void
  +delete(): void
}

User "1" -- "0..*" Vehicle : owns
Vehicle "1" -- "0..*" Service : has
Service "1" -- "1" BlockchainRecord : generates
Vehicle "1" -- "0..*" Media : hasPhotos
Service "1" -- "1" Media : hasInvoice
Dashboard --> Vehicle : references
Dashboard --> Service : aggregates

legend top right
  |<back:#0D47A1> </back>| **AutoLogger - Diagrama de Classes** |
  - Entidades para gestão veicular e serviços
  - Integração com API gratuita para cadastro
  - Suporte a dashboard e uploads de mídia
endlegend

@enduml